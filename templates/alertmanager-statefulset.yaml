{{- if .Values.alertmanager.statefulSet.enabled -}}
{{- $clusterPort := regexReplaceAll ".+[:]" (default "0.0.0.0:9094" .Values.config.alertmanager.cluster_bind_address) "" -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "cortex.fullname" . }}-alertmanager
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "cortex.name" . }}-alertmanager
    chart: {{ template "cortex.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    {{- toYaml .Values.alertmanager.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.alertmanager.replicas }}
  selector:
    matchLabels:
      app: {{ template "cortex.name" . }}-alertmanager
      release: {{ .Release.Name }}
  updateStrategy:
    {{- toYaml .Values.alertmanager.statefulStrategy | nindent 4 }}
  serviceName: {{ template "cortex.fullname" . }}-alertmanager-headless
  {{- if .Values.alertmanager.persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: storage
        {{- if .Values.alertmanager.persistentVolume.annotations }}
        annotations:
          {{ toYaml .Values.alertmanager.persistentVolume.annotations | nindent 10 }}
        {{- end }}
      spec:
        {{- if .Values.alertmanager.persistentVolume.storageClass }}
        {{- if (eq "-" .Values.alertmanager.persistentVolume.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.alertmanager.persistentVolume.storageClass }}"
        {{- end }}
        {{- end }}
        accessModes:
          {{ toYaml .Values.alertmanager.persistentVolume.accessModes | nindent 10 }}
        resources:
          requests:
            storage: "{{ .Values.alertmanager.persistentVolume.size }}"
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ template "cortex.name" . }}-alertmanager
        name: {{ template "cortex.name" . }}-alertmanager
        target: alertmanager
        release: {{ .Release.Name }}
        {{- with .Values.alertmanager.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.useExternalConfig }}
        checksum/config: {{ .Values.externalConfigVersion }}
        {{- else }}
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.alertmanager.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "cortex.serviceAccountName" . }}
      {{- if .Values.alertmanager.priorityClassName }}
      priorityClassName: {{ .Values.alertmanager.priorityClassName }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.alertmanager.securityContext | nindent 8 }}
      initContainers:
        {{- toYaml .Values.alertmanager.initContainers | nindent 8 }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.alertmanager.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.alertmanager.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.alertmanager.tolerations | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.alertmanager.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          secret:
            {{- if .Values.useExternalConfig }}
            secretName: {{ .Values.externalConfigSecretName }}
            {{- else }}
            secretName: {{ template "cortex.fullname" . }}
            {{- end }}
        {{- if not .Values.alertmanager.persistentVolume.enabled }}
        - name: storage
          emptyDir: {}
        {{- end }}
        {{- if .Values.alertmanager.extraVolumes }}
        {{ toYaml .Values.alertmanager.extraVolumes | nindent 8 }}
        {{- end }}
      containers:
        {{- if .Values.alertmanager.extraContainers }}
        {{ toYaml .Values.alertmanager.extraContainers | nindent 8 }}
        {{- end }}
        {{- if .Values.sidecar.alertmanager.enabled }}
        - name: {{ template "cortex.name" . }}-sc-alertmanager
          {{- if .Values.sidecar.image.sha }}
          image: "{{ .Values.sidecar.image.repository }}:{{ .Values.sidecar.image.tag }}@sha256:{{ .Values.sidecar.image.sha }}"
          {{- else }}
          image: "{{ .Values.sidecar.image.repository }}:{{ .Values.sidecar.image.tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.sidecar.imagePullPolicy }}
          env:
            {{- if .Values.sidecar.alertmanager.watchMethod }}
            - name: METHOD
              value: {{ .Values.sidecar.alertmanager.watchMethod }}
            {{ end }}
            - name: LABEL
              value: "{{ .Values.sidecar.alertmanager.label }}"
            {{- if .Values.sidecar.alertmanager.labelValue }}
            - name: LABEL_VALUE
              value: {{ quote .Values.sidecar.alertmanager.labelValue }}
            {{- end }}
            - name: FOLDER
              value: "{{ .Values.sidecar.alertmanager.folder }}{{- with .Values.sidecar.alertmanager.defaultFolderName }}/{{ . }}{{- end }}"
            - name: RESOURCE
              value: "both"
            {{- if .Values.sidecar.enableUniqueFilenames }}
            - name: UNIQUE_FILENAMES
              value: "{{ .Values.sidecar.enableUniqueFilenames }}"
            {{- end }}
            {{- if .Values.sidecar.alertmanager.searchNamespace }}
            - name: NAMESPACE
              value: "{{ .Values.sidecar.alertmanager.searchNamespace }}"
            {{- end }}
            {{- if .Values.sidecar.skipTlsVerify }}
            - name: SKIP_TLS_VERIFY
              value: "{{ .Values.sidecar.skipTlsVerify }}"
            {{- end }}
            {{- if .Values.sidecar.alertmanager.folderAnnotation }}
            - name: FOLDER_ANNOTATION
              value: "{{ .Values.sidecar.alertmanager.folderAnnotation }}"
          {{- end }}
          resources:
          {{ toYaml .Values.sidecar.resources | indent 6 }}
          {{- if .Values.sidecar.alertmanager.securityContext }}
          securityContext:
            runAsUser: 0
          {{ end }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
              {{- if .Values.alertmanager.persistentVolume.subPath }}
              subPath: {{ .Values.alertmanager.persistentVolume.subPath }}
              {{- else }}
              {{- if .Values.alertmanager.persistence.subPath }}
              ## DEPRECATED: use persistentVolume.subPath instead
              subPath: {{ .Values.alertmanager.persistence.subPath }}
              {{- end }}
              {{- end }}
        {{- end}}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "-target=alertmanager"
            - "-config.file=/etc/cortex/cortex.yaml"
            - "-alertmanager.configs.url=http://{{ template "cortex.fullname" . }}-configs.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:{{ .Values.config.server.http_listen_port }}"
            {{- if gt (.Values.alertmanager.replicas | int) 1 }}
            {{- range $n := until (.Values.alertmanager.replicas |int ) }}
            - -cluster.peer={{ template "cortex.fullname" $ }}-alertmanager-{{ $n }}.{{ template "cortex.fullname" $ }}-alertmanager-headless.{{ $.Release.Namespace }}.svc.{{ $.Values.clusterDomain }}:{{ $clusterPort }}
            {{- end }}
            {{- end }}
            {{- range $key, $value := .Values.alertmanager.extraArgs }}
            - "-{{ $key }}={{ $value }}"
            {{- end }}
          volumeMounts:
            {{- if .Values.alertmanager.extraVolumeMounts }}
            {{ toYaml .Values.alertmanager.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: config
              mountPath: /etc/cortex
            - name: storage
              mountPath: "/data"
              {{- if .Values.alertmanager.persistentVolume.subPath }}
              subPath: {{ .Values.alertmanager.persistentVolume.subPath }}
              {{- else }}
              {{- if .Values.alertmanager.persistence.subPath }}
              ## DEPRECATED: use persistentVolume.subPath instead
              subPath: {{ .Values.alertmanager.persistence.subPath }}
              {{- end }}
              {{- end }}
          ports:
            - name: http-metrics
              containerPort: {{ .Values.config.server.http_listen_port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.alertmanager.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.alertmanager.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.alertmanager.resources | nindent 12 }}
          securityContext:
            readOnlyRootFilesystem: true
          env:
            {{- if .Values.alertmanager.env }}
              {{- toYaml .Values.alertmanager.env | nindent 12 }}
            {{- end }}
{{- end -}}